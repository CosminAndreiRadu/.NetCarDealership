// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProiectDaw.Data;

namespace ProiectDaw.Migrations
{
    [DbContext(typeof(DBcon))]
    [Migration("20230117195220_VehicleTestersTableAndMTMRel")]
    partial class VehicleTestersTableAndMTMRel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ProiectDaw.Entities.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId")
                        .IsUnique();

                    b.ToTable("Location");
                });

            modelBuilder.Entity("ProiectDaw.Entities.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");
                });

            modelBuilder.Entity("ProiectDaw.Entities.QATester", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("QATesters");
                });

            modelBuilder.Entity("ProiectDaw.Entities.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Power")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ManufacturerId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("ProiectDaw.Entities.VehicleTester", b =>
                {
                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.Property<int>("QATesterId")
                        .HasColumnType("int");

                    b.HasKey("VehicleId", "QATesterId");

                    b.HasIndex("QATesterId");

                    b.ToTable("vehicleTesters");
                });

            modelBuilder.Entity("ProiectDaw.Entities.Location", b =>
                {
                    b.HasOne("ProiectDaw.Entities.Manufacturer", "Manufacturer")
                        .WithOne("Location")
                        .HasForeignKey("ProiectDaw.Entities.Location", "ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("ProiectDaw.Entities.Vehicle", b =>
                {
                    b.HasOne("ProiectDaw.Entities.Manufacturer", "Manufacturer")
                        .WithMany("Vehicles")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manufacturer");
                });

            modelBuilder.Entity("ProiectDaw.Entities.VehicleTester", b =>
                {
                    b.HasOne("ProiectDaw.Entities.QATester", "QATester")
                        .WithMany("VehicleTesters")
                        .HasForeignKey("QATesterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProiectDaw.Entities.Vehicle", "Vehicle")
                        .WithMany("VehicleTesters")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("QATester");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("ProiectDaw.Entities.Manufacturer", b =>
                {
                    b.Navigation("Location");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("ProiectDaw.Entities.QATester", b =>
                {
                    b.Navigation("VehicleTesters");
                });

            modelBuilder.Entity("ProiectDaw.Entities.Vehicle", b =>
                {
                    b.Navigation("VehicleTesters");
                });
#pragma warning restore 612, 618
        }
    }
}
